Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> calc instrucciones
Rule 2     instrucciones -> calc
Rule 3     calc -> VIRGULILLA expression
Rule 4     calc -> VIRGULILLA var_assing
Rule 5     calc -> VIRGULILLA empty
Rule 6     var_assing -> ID IGUAL expression
Rule 7     expression -> expression SUMA expression
Rule 8     expression -> expression RESTA expression
Rule 9     expression -> expression MUL expression
Rule 10    expression -> expression DIV expression
Rule 11    expression -> expression POTEN expression
Rule 12    expression -> expression MOD expression
Rule 13    expression -> PARABRE expression PARCIERRA
Rule 14    expression -> INT
Rule 15    expression -> FLOAT
Rule 16    expression -> ID
Rule 17    empty -> <empty>

Terminals, with rules where they appear

DIV                  : 10
FLOAT                : 15
ID                   : 6 16
IGUAL                : 6
INT                  : 14
MOD                  : 12
MUL                  : 9
PARABRE              : 13
PARCIERRA            : 13
POTEN                : 11
RESTA                : 8
SUMA                 : 7
VIRGULILLA           : 3 4 5
error                : 

Nonterminals, with rules where they appear

calc                 : 1 2
empty                : 5
expression           : 3 6 7 7 8 8 9 9 10 10 11 11 12 12 13
instrucciones        : 1 0
var_assing           : 4

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . calc instrucciones
    (2) instrucciones -> . calc
    (3) calc -> . VIRGULILLA expression
    (4) calc -> . VIRGULILLA var_assing
    (5) calc -> . VIRGULILLA empty

    VIRGULILLA      shift and go to state 3

    instrucciones                  shift and go to state 1
    calc                           shift and go to state 2

state 1

    (0) S' -> instrucciones .



state 2

    (1) instrucciones -> calc . instrucciones
    (2) instrucciones -> calc .
    (1) instrucciones -> . calc instrucciones
    (2) instrucciones -> . calc
    (3) calc -> . VIRGULILLA expression
    (4) calc -> . VIRGULILLA var_assing
    (5) calc -> . VIRGULILLA empty

    $end            reduce using rule 2 (instrucciones -> calc .)
    VIRGULILLA      shift and go to state 3

    calc                           shift and go to state 2
    instrucciones                  shift and go to state 4

state 3

    (3) calc -> VIRGULILLA . expression
    (4) calc -> VIRGULILLA . var_assing
    (5) calc -> VIRGULILLA . empty
    (7) expression -> . expression SUMA expression
    (8) expression -> . expression RESTA expression
    (9) expression -> . expression MUL expression
    (10) expression -> . expression DIV expression
    (11) expression -> . expression POTEN expression
    (12) expression -> . expression MOD expression
    (13) expression -> . PARABRE expression PARCIERRA
    (14) expression -> . INT
    (15) expression -> . FLOAT
    (16) expression -> . ID
    (6) var_assing -> . ID IGUAL expression
    (17) empty -> .

    PARABRE         shift and go to state 8
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    ID              shift and go to state 11
    VIRGULILLA      reduce using rule 17 (empty -> .)
    $end            reduce using rule 17 (empty -> .)

    expression                     shift and go to state 5
    var_assing                     shift and go to state 6
    empty                          shift and go to state 7

state 4

    (1) instrucciones -> calc instrucciones .

    $end            reduce using rule 1 (instrucciones -> calc instrucciones .)


state 5

    (3) calc -> VIRGULILLA expression .
    (7) expression -> expression . SUMA expression
    (8) expression -> expression . RESTA expression
    (9) expression -> expression . MUL expression
    (10) expression -> expression . DIV expression
    (11) expression -> expression . POTEN expression
    (12) expression -> expression . MOD expression

    VIRGULILLA      reduce using rule 3 (calc -> VIRGULILLA expression .)
    $end            reduce using rule 3 (calc -> VIRGULILLA expression .)
    SUMA            shift and go to state 12
    RESTA           shift and go to state 13
    MUL             shift and go to state 14
    DIV             shift and go to state 15
    POTEN           shift and go to state 16
    MOD             shift and go to state 17


state 6

    (4) calc -> VIRGULILLA var_assing .

    VIRGULILLA      reduce using rule 4 (calc -> VIRGULILLA var_assing .)
    $end            reduce using rule 4 (calc -> VIRGULILLA var_assing .)


state 7

    (5) calc -> VIRGULILLA empty .

    VIRGULILLA      reduce using rule 5 (calc -> VIRGULILLA empty .)
    $end            reduce using rule 5 (calc -> VIRGULILLA empty .)


state 8

    (13) expression -> PARABRE . expression PARCIERRA
    (7) expression -> . expression SUMA expression
    (8) expression -> . expression RESTA expression
    (9) expression -> . expression MUL expression
    (10) expression -> . expression DIV expression
    (11) expression -> . expression POTEN expression
    (12) expression -> . expression MOD expression
    (13) expression -> . PARABRE expression PARCIERRA
    (14) expression -> . INT
    (15) expression -> . FLOAT
    (16) expression -> . ID

    PARABRE         shift and go to state 8
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    ID              shift and go to state 19

    expression                     shift and go to state 18

state 9

    (14) expression -> INT .

    SUMA            reduce using rule 14 (expression -> INT .)
    RESTA           reduce using rule 14 (expression -> INT .)
    MUL             reduce using rule 14 (expression -> INT .)
    DIV             reduce using rule 14 (expression -> INT .)
    POTEN           reduce using rule 14 (expression -> INT .)
    MOD             reduce using rule 14 (expression -> INT .)
    VIRGULILLA      reduce using rule 14 (expression -> INT .)
    $end            reduce using rule 14 (expression -> INT .)
    PARCIERRA       reduce using rule 14 (expression -> INT .)


state 10

    (15) expression -> FLOAT .

    SUMA            reduce using rule 15 (expression -> FLOAT .)
    RESTA           reduce using rule 15 (expression -> FLOAT .)
    MUL             reduce using rule 15 (expression -> FLOAT .)
    DIV             reduce using rule 15 (expression -> FLOAT .)
    POTEN           reduce using rule 15 (expression -> FLOAT .)
    MOD             reduce using rule 15 (expression -> FLOAT .)
    VIRGULILLA      reduce using rule 15 (expression -> FLOAT .)
    $end            reduce using rule 15 (expression -> FLOAT .)
    PARCIERRA       reduce using rule 15 (expression -> FLOAT .)


state 11

    (16) expression -> ID .
    (6) var_assing -> ID . IGUAL expression

    SUMA            reduce using rule 16 (expression -> ID .)
    RESTA           reduce using rule 16 (expression -> ID .)
    MUL             reduce using rule 16 (expression -> ID .)
    DIV             reduce using rule 16 (expression -> ID .)
    POTEN           reduce using rule 16 (expression -> ID .)
    MOD             reduce using rule 16 (expression -> ID .)
    VIRGULILLA      reduce using rule 16 (expression -> ID .)
    $end            reduce using rule 16 (expression -> ID .)
    IGUAL           shift and go to state 20


state 12

    (7) expression -> expression SUMA . expression
    (7) expression -> . expression SUMA expression
    (8) expression -> . expression RESTA expression
    (9) expression -> . expression MUL expression
    (10) expression -> . expression DIV expression
    (11) expression -> . expression POTEN expression
    (12) expression -> . expression MOD expression
    (13) expression -> . PARABRE expression PARCIERRA
    (14) expression -> . INT
    (15) expression -> . FLOAT
    (16) expression -> . ID

    PARABRE         shift and go to state 8
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    ID              shift and go to state 19

    expression                     shift and go to state 21

state 13

    (8) expression -> expression RESTA . expression
    (7) expression -> . expression SUMA expression
    (8) expression -> . expression RESTA expression
    (9) expression -> . expression MUL expression
    (10) expression -> . expression DIV expression
    (11) expression -> . expression POTEN expression
    (12) expression -> . expression MOD expression
    (13) expression -> . PARABRE expression PARCIERRA
    (14) expression -> . INT
    (15) expression -> . FLOAT
    (16) expression -> . ID

    PARABRE         shift and go to state 8
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    ID              shift and go to state 19

    expression                     shift and go to state 22

state 14

    (9) expression -> expression MUL . expression
    (7) expression -> . expression SUMA expression
    (8) expression -> . expression RESTA expression
    (9) expression -> . expression MUL expression
    (10) expression -> . expression DIV expression
    (11) expression -> . expression POTEN expression
    (12) expression -> . expression MOD expression
    (13) expression -> . PARABRE expression PARCIERRA
    (14) expression -> . INT
    (15) expression -> . FLOAT
    (16) expression -> . ID

    PARABRE         shift and go to state 8
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    ID              shift and go to state 19

    expression                     shift and go to state 23

state 15

    (10) expression -> expression DIV . expression
    (7) expression -> . expression SUMA expression
    (8) expression -> . expression RESTA expression
    (9) expression -> . expression MUL expression
    (10) expression -> . expression DIV expression
    (11) expression -> . expression POTEN expression
    (12) expression -> . expression MOD expression
    (13) expression -> . PARABRE expression PARCIERRA
    (14) expression -> . INT
    (15) expression -> . FLOAT
    (16) expression -> . ID

    PARABRE         shift and go to state 8
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    ID              shift and go to state 19

    expression                     shift and go to state 24

state 16

    (11) expression -> expression POTEN . expression
    (7) expression -> . expression SUMA expression
    (8) expression -> . expression RESTA expression
    (9) expression -> . expression MUL expression
    (10) expression -> . expression DIV expression
    (11) expression -> . expression POTEN expression
    (12) expression -> . expression MOD expression
    (13) expression -> . PARABRE expression PARCIERRA
    (14) expression -> . INT
    (15) expression -> . FLOAT
    (16) expression -> . ID

    PARABRE         shift and go to state 8
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    ID              shift and go to state 19

    expression                     shift and go to state 25

state 17

    (12) expression -> expression MOD . expression
    (7) expression -> . expression SUMA expression
    (8) expression -> . expression RESTA expression
    (9) expression -> . expression MUL expression
    (10) expression -> . expression DIV expression
    (11) expression -> . expression POTEN expression
    (12) expression -> . expression MOD expression
    (13) expression -> . PARABRE expression PARCIERRA
    (14) expression -> . INT
    (15) expression -> . FLOAT
    (16) expression -> . ID

    PARABRE         shift and go to state 8
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    ID              shift and go to state 19

    expression                     shift and go to state 26

state 18

    (13) expression -> PARABRE expression . PARCIERRA
    (7) expression -> expression . SUMA expression
    (8) expression -> expression . RESTA expression
    (9) expression -> expression . MUL expression
    (10) expression -> expression . DIV expression
    (11) expression -> expression . POTEN expression
    (12) expression -> expression . MOD expression

    PARCIERRA       shift and go to state 27
    SUMA            shift and go to state 12
    RESTA           shift and go to state 13
    MUL             shift and go to state 14
    DIV             shift and go to state 15
    POTEN           shift and go to state 16
    MOD             shift and go to state 17


state 19

    (16) expression -> ID .

    PARCIERRA       reduce using rule 16 (expression -> ID .)
    SUMA            reduce using rule 16 (expression -> ID .)
    RESTA           reduce using rule 16 (expression -> ID .)
    MUL             reduce using rule 16 (expression -> ID .)
    DIV             reduce using rule 16 (expression -> ID .)
    POTEN           reduce using rule 16 (expression -> ID .)
    MOD             reduce using rule 16 (expression -> ID .)
    VIRGULILLA      reduce using rule 16 (expression -> ID .)
    $end            reduce using rule 16 (expression -> ID .)


state 20

    (6) var_assing -> ID IGUAL . expression
    (7) expression -> . expression SUMA expression
    (8) expression -> . expression RESTA expression
    (9) expression -> . expression MUL expression
    (10) expression -> . expression DIV expression
    (11) expression -> . expression POTEN expression
    (12) expression -> . expression MOD expression
    (13) expression -> . PARABRE expression PARCIERRA
    (14) expression -> . INT
    (15) expression -> . FLOAT
    (16) expression -> . ID

    PARABRE         shift and go to state 8
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    ID              shift and go to state 19

    expression                     shift and go to state 28

state 21

    (7) expression -> expression SUMA expression .
    (7) expression -> expression . SUMA expression
    (8) expression -> expression . RESTA expression
    (9) expression -> expression . MUL expression
    (10) expression -> expression . DIV expression
    (11) expression -> expression . POTEN expression
    (12) expression -> expression . MOD expression

    SUMA            reduce using rule 7 (expression -> expression SUMA expression .)
    RESTA           reduce using rule 7 (expression -> expression SUMA expression .)
    VIRGULILLA      reduce using rule 7 (expression -> expression SUMA expression .)
    $end            reduce using rule 7 (expression -> expression SUMA expression .)
    PARCIERRA       reduce using rule 7 (expression -> expression SUMA expression .)
    MUL             shift and go to state 14
    DIV             shift and go to state 15
    POTEN           shift and go to state 16
    MOD             shift and go to state 17

  ! MUL             [ reduce using rule 7 (expression -> expression SUMA expression .) ]
  ! DIV             [ reduce using rule 7 (expression -> expression SUMA expression .) ]
  ! POTEN           [ reduce using rule 7 (expression -> expression SUMA expression .) ]
  ! MOD             [ reduce using rule 7 (expression -> expression SUMA expression .) ]
  ! SUMA            [ shift and go to state 12 ]
  ! RESTA           [ shift and go to state 13 ]


state 22

    (8) expression -> expression RESTA expression .
    (7) expression -> expression . SUMA expression
    (8) expression -> expression . RESTA expression
    (9) expression -> expression . MUL expression
    (10) expression -> expression . DIV expression
    (11) expression -> expression . POTEN expression
    (12) expression -> expression . MOD expression

    SUMA            reduce using rule 8 (expression -> expression RESTA expression .)
    RESTA           reduce using rule 8 (expression -> expression RESTA expression .)
    VIRGULILLA      reduce using rule 8 (expression -> expression RESTA expression .)
    $end            reduce using rule 8 (expression -> expression RESTA expression .)
    PARCIERRA       reduce using rule 8 (expression -> expression RESTA expression .)
    MUL             shift and go to state 14
    DIV             shift and go to state 15
    POTEN           shift and go to state 16
    MOD             shift and go to state 17

  ! MUL             [ reduce using rule 8 (expression -> expression RESTA expression .) ]
  ! DIV             [ reduce using rule 8 (expression -> expression RESTA expression .) ]
  ! POTEN           [ reduce using rule 8 (expression -> expression RESTA expression .) ]
  ! MOD             [ reduce using rule 8 (expression -> expression RESTA expression .) ]
  ! SUMA            [ shift and go to state 12 ]
  ! RESTA           [ shift and go to state 13 ]


state 23

    (9) expression -> expression MUL expression .
    (7) expression -> expression . SUMA expression
    (8) expression -> expression . RESTA expression
    (9) expression -> expression . MUL expression
    (10) expression -> expression . DIV expression
    (11) expression -> expression . POTEN expression
    (12) expression -> expression . MOD expression

    SUMA            reduce using rule 9 (expression -> expression MUL expression .)
    RESTA           reduce using rule 9 (expression -> expression MUL expression .)
    MUL             reduce using rule 9 (expression -> expression MUL expression .)
    DIV             reduce using rule 9 (expression -> expression MUL expression .)
    VIRGULILLA      reduce using rule 9 (expression -> expression MUL expression .)
    $end            reduce using rule 9 (expression -> expression MUL expression .)
    PARCIERRA       reduce using rule 9 (expression -> expression MUL expression .)
    POTEN           shift and go to state 16
    MOD             shift and go to state 17

  ! POTEN           [ reduce using rule 9 (expression -> expression MUL expression .) ]
  ! MOD             [ reduce using rule 9 (expression -> expression MUL expression .) ]
  ! SUMA            [ shift and go to state 12 ]
  ! RESTA           [ shift and go to state 13 ]
  ! MUL             [ shift and go to state 14 ]
  ! DIV             [ shift and go to state 15 ]


state 24

    (10) expression -> expression DIV expression .
    (7) expression -> expression . SUMA expression
    (8) expression -> expression . RESTA expression
    (9) expression -> expression . MUL expression
    (10) expression -> expression . DIV expression
    (11) expression -> expression . POTEN expression
    (12) expression -> expression . MOD expression

    SUMA            reduce using rule 10 (expression -> expression DIV expression .)
    RESTA           reduce using rule 10 (expression -> expression DIV expression .)
    MUL             reduce using rule 10 (expression -> expression DIV expression .)
    DIV             reduce using rule 10 (expression -> expression DIV expression .)
    VIRGULILLA      reduce using rule 10 (expression -> expression DIV expression .)
    $end            reduce using rule 10 (expression -> expression DIV expression .)
    PARCIERRA       reduce using rule 10 (expression -> expression DIV expression .)
    POTEN           shift and go to state 16
    MOD             shift and go to state 17

  ! POTEN           [ reduce using rule 10 (expression -> expression DIV expression .) ]
  ! MOD             [ reduce using rule 10 (expression -> expression DIV expression .) ]
  ! SUMA            [ shift and go to state 12 ]
  ! RESTA           [ shift and go to state 13 ]
  ! MUL             [ shift and go to state 14 ]
  ! DIV             [ shift and go to state 15 ]


state 25

    (11) expression -> expression POTEN expression .
    (7) expression -> expression . SUMA expression
    (8) expression -> expression . RESTA expression
    (9) expression -> expression . MUL expression
    (10) expression -> expression . DIV expression
    (11) expression -> expression . POTEN expression
    (12) expression -> expression . MOD expression

    SUMA            reduce using rule 11 (expression -> expression POTEN expression .)
    RESTA           reduce using rule 11 (expression -> expression POTEN expression .)
    MUL             reduce using rule 11 (expression -> expression POTEN expression .)
    DIV             reduce using rule 11 (expression -> expression POTEN expression .)
    POTEN           reduce using rule 11 (expression -> expression POTEN expression .)
    MOD             reduce using rule 11 (expression -> expression POTEN expression .)
    VIRGULILLA      reduce using rule 11 (expression -> expression POTEN expression .)
    $end            reduce using rule 11 (expression -> expression POTEN expression .)
    PARCIERRA       reduce using rule 11 (expression -> expression POTEN expression .)

  ! SUMA            [ shift and go to state 12 ]
  ! RESTA           [ shift and go to state 13 ]
  ! MUL             [ shift and go to state 14 ]
  ! DIV             [ shift and go to state 15 ]
  ! POTEN           [ shift and go to state 16 ]
  ! MOD             [ shift and go to state 17 ]


state 26

    (12) expression -> expression MOD expression .
    (7) expression -> expression . SUMA expression
    (8) expression -> expression . RESTA expression
    (9) expression -> expression . MUL expression
    (10) expression -> expression . DIV expression
    (11) expression -> expression . POTEN expression
    (12) expression -> expression . MOD expression

    SUMA            reduce using rule 12 (expression -> expression MOD expression .)
    RESTA           reduce using rule 12 (expression -> expression MOD expression .)
    MUL             reduce using rule 12 (expression -> expression MOD expression .)
    DIV             reduce using rule 12 (expression -> expression MOD expression .)
    POTEN           reduce using rule 12 (expression -> expression MOD expression .)
    MOD             reduce using rule 12 (expression -> expression MOD expression .)
    VIRGULILLA      reduce using rule 12 (expression -> expression MOD expression .)
    $end            reduce using rule 12 (expression -> expression MOD expression .)
    PARCIERRA       reduce using rule 12 (expression -> expression MOD expression .)

  ! SUMA            [ shift and go to state 12 ]
  ! RESTA           [ shift and go to state 13 ]
  ! MUL             [ shift and go to state 14 ]
  ! DIV             [ shift and go to state 15 ]
  ! POTEN           [ shift and go to state 16 ]
  ! MOD             [ shift and go to state 17 ]


state 27

    (13) expression -> PARABRE expression PARCIERRA .

    SUMA            reduce using rule 13 (expression -> PARABRE expression PARCIERRA .)
    RESTA           reduce using rule 13 (expression -> PARABRE expression PARCIERRA .)
    MUL             reduce using rule 13 (expression -> PARABRE expression PARCIERRA .)
    DIV             reduce using rule 13 (expression -> PARABRE expression PARCIERRA .)
    POTEN           reduce using rule 13 (expression -> PARABRE expression PARCIERRA .)
    MOD             reduce using rule 13 (expression -> PARABRE expression PARCIERRA .)
    VIRGULILLA      reduce using rule 13 (expression -> PARABRE expression PARCIERRA .)
    $end            reduce using rule 13 (expression -> PARABRE expression PARCIERRA .)
    PARCIERRA       reduce using rule 13 (expression -> PARABRE expression PARCIERRA .)


state 28

    (6) var_assing -> ID IGUAL expression .
    (7) expression -> expression . SUMA expression
    (8) expression -> expression . RESTA expression
    (9) expression -> expression . MUL expression
    (10) expression -> expression . DIV expression
    (11) expression -> expression . POTEN expression
    (12) expression -> expression . MOD expression

    VIRGULILLA      reduce using rule 6 (var_assing -> ID IGUAL expression .)
    $end            reduce using rule 6 (var_assing -> ID IGUAL expression .)
    SUMA            shift and go to state 12
    RESTA           shift and go to state 13
    MUL             shift and go to state 14
    DIV             shift and go to state 15
    POTEN           shift and go to state 16
    MOD             shift and go to state 17

